<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/voyeger/NewsFeedController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/voyeger/NewsFeedController.java" />
              <option name="originalContent" value="package com.example.voyeger;&#10;&#10;import javafx.fxml.FXML;&#10;import javafx.fxml.FXMLLoader;&#10;import javafx.scene.control.*;&#10;import javafx.scene.layout.*;&#10;import javafx.collections.FXCollections;&#10;import javafx.collections.ObservableList;&#10;import javafx.geometry.Insets;&#10;import javafx.geometry.Pos;&#10;&#10;import java.util.HashMap;&#10;import java.util.Map;&#10;&#10;public class NewsFeedController {&#10;&#10;    @FXML&#10;    private VBox feedContainer;&#10;&#10;    @FXML&#10;    private TextArea createPostArea;&#10;&#10;    @FXML&#10;    private ComboBox&lt;String&gt; tripTypeCombo;&#10;&#10;    private TripService tripService;&#10;    private ObservableList&lt;TripPost&gt; posts;&#10;    private Map&lt;String, Boolean&gt; likedPosts;&#10;&#10;    @FXML&#10;    public void initialize() {&#10;        tripService = TripService.getInstance();&#10;        posts = FXCollections.observableArrayList();&#10;        likedPosts = new HashMap&lt;&gt;();&#10;&#10;        tripTypeCombo.setItems(FXCollections.observableArrayList(&quot;Solo Trip&quot;, &quot;Group Trip&quot;));&#10;        tripTypeCombo.setValue(&quot;Group Trip&quot;);&#10;&#10;        loadNewsFeed();&#10;    }&#10;&#10;    @FXML&#10;    private void handleCreatePost() {&#10;        String content = createPostArea.getText().trim();&#10;        if (content.isEmpty()) {&#10;            showAlert(&quot;Empty Post&quot;, &quot;Please write something about your trip!&quot;);&#10;            return;&#10;        }&#10;&#10;        try {&#10;            FXMLLoader loader = new FXMLLoader(getClass().getResource(&quot;CreateTripDialog.fxml&quot;));&#10;            DialogPane dialogPane = loader.load();&#10;&#10;            CreateTripDialogController controller = loader.getController();&#10;&#10;            Dialog&lt;ButtonType&gt; dialog = new Dialog&lt;&gt;();&#10;            dialog.setTitle(&quot;Create Trip&quot;);&#10;            dialog.setDialogPane(dialogPane);&#10;&#10;            dialog.showAndWait().ifPresent(buttonType -&gt; {&#10;                if (buttonType.getButtonData() == ButtonBar.ButtonData.OK_DONE) {&#10;                    Trip trip = controller.getCreatedTrip();&#10;                    if (trip != null) {&#10;                        TripPost post = tripService.postTrip(trip.getId(), content);&#10;                        if (post != null) {&#10;                            createPostArea.clear();&#10;                            loadNewsFeed();&#10;                            showAlert(&quot;Success&quot;, &quot;Your trip has been posted to the news feed!&quot;);&#10;                        }&#10;                    }&#10;                }&#10;            });&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            showAlert(&quot;Error&quot;, &quot;Failed to create trip post: &quot; + e.getMessage());&#10;        }&#10;    }&#10;&#10;    @FXML&#10;    private void handleRefreshFeed() {&#10;        loadNewsFeed();&#10;    }&#10;&#10;    private void loadNewsFeed() {&#10;        feedContainer.getChildren().clear();&#10;        posts.clear();&#10;        posts.addAll(tripService.getNewsFeed());&#10;&#10;        if (posts.isEmpty()) {&#10;            Label emptyLabel = new Label(&quot;No posts yet. Be the first to share your trip! ✈️&quot;);&#10;            emptyLabel.setStyle(&quot;-fx-font-size: 14px; -fx-text-fill: #95a5a6; -fx-padding: 40px;&quot;);&#10;            feedContainer.getChildren().add(emptyLabel);&#10;        } else {&#10;            for (TripPost post : posts) {&#10;                feedContainer.getChildren().add(createPostCard(post));&#10;            }&#10;        }&#10;    }&#10;&#10;    private VBox createPostCard(TripPost post) {&#10;        VBox card = new VBox(10);&#10;        card.getStyleClass().add(&quot;post-card&quot;);&#10;        card.setPadding(new Insets(15));&#10;&#10;        // Header: User info and time&#10;        HBox header = new HBox(10);&#10;        header.setAlignment(Pos.CENTER_LEFT);&#10;&#10;        Label avatarLabel = new Label(post.getAuthor().getDisplayName().substring(0, 1).toUpperCase());&#10;        avatarLabel.getStyleClass().add(&quot;avatar-circle&quot;);&#10;&#10;        VBox userInfo = new VBox(2);&#10;        Label nameLabel = new Label(post.getAuthor().getDisplayName());&#10;        nameLabel.getStyleClass().add(&quot;post-author&quot;);&#10;        Label timeLabel = new Label(post.getTimeAgo());&#10;        timeLabel.getStyleClass().add(&quot;post-time&quot;);&#10;        userInfo.getChildren().addAll(nameLabel, timeLabel);&#10;&#10;        header.getChildren().addAll(avatarLabel, userInfo);&#10;&#10;        // Content&#10;        Label contentLabel = new Label(post.getContent());&#10;        contentLabel.setWrapText(true);&#10;        contentLabel.getStyleClass().add(&quot;post-content&quot;);&#10;&#10;        // Trip Details Card&#10;        VBox tripCard = new VBox(8);&#10;        tripCard.getStyleClass().add(&quot;trip-details-card&quot;);&#10;        tripCard.setPadding(new Insets(12));&#10;&#10;        Trip trip = post.getTrip();&#10;        String typeIcon = trip.isGroupTrip() ? &quot;&quot; : &quot;&quot;;&#10;        Label tripTitle = new Label(typeIcon + &quot; &quot; + trip.getTitle());&#10;        tripTitle.getStyleClass().add(&quot;trip-title&quot;);&#10;&#10;        Label tripRoute = new Label(&quot; &quot; + trip.getRoute());&#10;        Label tripDate = new Label(&quot; &quot; + trip.getDate());&#10;        Label tripBudget = new Label(&quot; $&quot; + String.format(&quot;%.2f&quot;, trip.getBudget()));&#10;&#10;        if (!trip.getDescription().isEmpty()) {&#10;            Label tripDesc = new Label(trip.getDescription());&#10;            tripDesc.setWrapText(true);&#10;            tripDesc.getStyleClass().add(&quot;trip-description&quot;);&#10;            tripCard.getChildren().addAll(tripTitle, tripRoute, tripDate, tripBudget, tripDesc);&#10;        } else {&#10;            tripCard.getChildren().addAll(tripTitle, tripRoute, tripDate, tripBudget);&#10;        }&#10;&#10;        // Action buttons&#10;        HBox actions = new HBox(15);&#10;        actions.setAlignment(Pos.CENTER_LEFT);&#10;        actions.getStyleClass().add(&quot;post-actions&quot;);&#10;&#10;        Button likeBtn = new Button(&quot;❤ Like (&quot; + post.getLikes() + &quot;)&quot;);&#10;        likeBtn.getStyleClass().add(&quot;action-btn&quot;);&#10;        likeBtn.setOnAction(e -&gt; handleLikePost(post, likeBtn));&#10;&#10;        Button commentBtn = new Button(&quot; Comment (&quot; + post.getComments() + &quot;)&quot;);&#10;        commentBtn.getStyleClass().add(&quot;action-btn&quot;);&#10;&#10;        Button joinBtn = new Button(&quot;✈ Join Trip&quot;);&#10;        joinBtn.getStyleClass().add(&quot;action-btn-primary&quot;);&#10;        joinBtn.setOnAction(e -&gt; handleJoinTrip(post.getTrip()));&#10;&#10;        if (!trip.isGroupTrip() || trip.getCreatorUsername().equals(tripService.getCurrentUser().getUsername())) {&#10;            joinBtn.setDisable(true);&#10;        }&#10;&#10;        actions.getChildren().addAll(likeBtn, commentBtn, joinBtn);&#10;&#10;        // Add all to card&#10;        card.getChildren().addAll(header, contentLabel, tripCard, new Separator(), actions);&#10;&#10;        return card;&#10;    }&#10;&#10;    private void handleLikePost(TripPost post, Button likeBtn) {&#10;        boolean isLiked = likedPosts.getOrDefault(post.getId(), false);&#10;&#10;        if (isLiked) {&#10;            tripService.unlikePost(post.getId());&#10;            likedPosts.put(post.getId(), false);&#10;        } else {&#10;            tripService.likePost(post.getId());&#10;            likedPosts.put(post.getId(), true);&#10;        }&#10;&#10;        likeBtn.setText(&quot;❤ Like (&quot; + post.getLikes() + &quot;)&quot;);&#10;    }&#10;&#10;    private void handleJoinTrip(Trip trip) {&#10;        TextInputDialog dialog = new TextInputDialog();&#10;        dialog.setTitle(&quot;Request to Join&quot;);&#10;        dialog.setHeaderText(&quot;Request to join: &quot; + trip.getTitle());&#10;        dialog.setContentText(&quot;Enter your message:&quot;);&#10;&#10;        dialog.showAndWait().ifPresent(message -&gt; {&#10;            JoinRequest request = tripService.requestToJoin(trip.getId(), message);&#10;            if (request != null) {&#10;                showAlert(&quot;Request Sent&quot;, &quot;Your join request has been sent to &quot; + trip.getCreatorUsername() + &quot;!&quot;);&#10;            }&#10;        });&#10;    }&#10;&#10;    private void showAlert(String title, String message) {&#10;        Alert alert = new Alert(Alert.AlertType.INFORMATION);&#10;        alert.setTitle(title);&#10;        alert.setHeaderText(null);&#10;        alert.setContentText(message);&#10;        alert.showAndWait();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.voyeger;&#13;&#10;&#13;&#10;import javafx.fxml.FXML;&#13;&#10;import javafx.fxml.FXMLLoader;&#13;&#10;import javafx.scene.control.*;&#13;&#10;import javafx.scene.layout.*;&#13;&#10;import javafx.collections.FXCollections;&#13;&#10;import javafx.collections.ObservableList;&#13;&#10;import javafx.geometry.Insets;&#13;&#10;import javafx.geometry.Pos;&#13;&#10;import javafx.scene.Parent;&#13;&#10;import javafx.scene.Scene;&#13;&#10;import javafx.stage.Stage;&#13;&#10;&#13;&#10;import java.time.format.DateTimeFormatter;&#13;&#10;import java.util.HashMap;&#13;&#10;import java.util.Map;&#13;&#10;&#13;&#10;public class NewsFeedController {&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private VBox feedContainer;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private Label welcomeLabel;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private Label tripCountLabel;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private Label rewardPointsLabel;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private Label upcomingTripsLabel;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private TextArea createPostArea;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private VBox quickLinksContainer;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private VBox notificationsContainer;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private ScrollPane feedScrollPane;&#13;&#10;&#13;&#10;    private TripService tripService;&#13;&#10;    private ObservableList&lt;TripPost&gt; posts;&#13;&#10;    private Map&lt;String, Boolean&gt; likedPosts;&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    public void initialize() {&#13;&#10;        tripService = TripService.getInstance();&#13;&#10;        posts = FXCollections.observableArrayList();&#13;&#10;        likedPosts = new HashMap&lt;&gt;();&#13;&#10;&#13;&#10;        updateWelcomeBanner();&#13;&#10;        setupQuickLinks();&#13;&#10;        loadNewsFeed();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void updateWelcomeBanner() {&#13;&#10;        User currentUser = tripService.getCurrentUser();&#13;&#10;        if (currentUser != null) {&#13;&#10;            welcomeLabel.setText(&quot;Welcome, &quot; + currentUser.getDisplayName() + &quot;! &quot;);&#13;&#10;            &#13;&#10;            // Update statistics&#13;&#10;            int tripCount = tripService.getUserTrips(currentUser.getUsername()).size();&#13;&#10;            tripCountLabel.setText(String.valueOf(tripCount));&#13;&#10;            &#13;&#10;            // TODO: Implement reward points system&#13;&#10;            rewardPointsLabel.setText(&quot;0&quot;);&#13;&#10;            &#13;&#10;            // Count upcoming trips (trips with future dates)&#13;&#10;            long upcomingCount = tripService.getUserTrips(currentUser.getUsername()).stream()&#13;&#10;                    .filter(trip -&gt; trip.getDate().isAfter(java.time.LocalDate.now()))&#13;&#10;                    .count();&#13;&#10;            upcomingTripsLabel.setText(String.valueOf(upcomingCount));&#13;&#10;        } else {&#13;&#10;            welcomeLabel.setText(&quot;Welcome, Guest! &quot;);&#13;&#10;            tripCountLabel.setText(&quot;0&quot;);&#13;&#10;            rewardPointsLabel.setText(&quot;0&quot;);&#13;&#10;            upcomingTripsLabel.setText(&quot;0&quot;);&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void setupQuickLinks() {&#13;&#10;        // This would be populated from the FXML, but we can add dynamic behavior here if needed&#13;&#10;    }&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private void handleCreatePost() {&#13;&#10;        String content = createPostArea.getText().trim();&#13;&#10;        if (content.isEmpty()) {&#13;&#10;            showAlert(&quot;Empty Post&quot;, &quot;Please write something about your trip!&quot;);&#13;&#10;            return;&#13;&#10;        }&#13;&#10;&#13;&#10;        try {&#13;&#10;            FXMLLoader loader = new FXMLLoader(getClass().getResource(&quot;CreateTripDialog.fxml&quot;));&#13;&#10;            DialogPane dialogPane = loader.load();&#13;&#10;&#13;&#10;            CreateTripDialogController controller = loader.getController();&#13;&#10;&#13;&#10;            Dialog&lt;ButtonType&gt; dialog = new Dialog&lt;&gt;();&#13;&#10;            dialog.setTitle(&quot;Create Trip&quot;);&#13;&#10;            dialog.setDialogPane(dialogPane);&#13;&#10;&#13;&#10;            dialog.showAndWait().ifPresent(buttonType -&gt; {&#13;&#10;                if (buttonType.getButtonData() == ButtonBar.ButtonData.OK_DONE) {&#13;&#10;                    Trip trip = controller.getCreatedTrip();&#13;&#10;                    if (trip != null) {&#13;&#10;                        TripPost post = tripService.postTrip(trip.getId(), content);&#13;&#10;                        if (post != null) {&#13;&#10;                            createPostArea.clear();&#13;&#10;                            loadNewsFeed();&#13;&#10;                            showAlert(&quot;Success&quot;, &quot;Your trip has been posted to the news feed!&quot;);&#13;&#10;                        }&#13;&#10;                    }&#13;&#10;                }&#13;&#10;            });&#13;&#10;&#13;&#10;        } catch (Exception e) {&#13;&#10;            e.printStackTrace();&#13;&#10;            showAlert(&quot;Error&quot;, &quot;Failed to create trip post: &quot; + e.getMessage());&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private void handleRefreshFeed() {&#13;&#10;        loadNewsFeed();&#13;&#10;        updateWelcomeBanner();&#13;&#10;    }&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private void handleMyTrips() {&#13;&#10;        navigateToPage(&quot;MyTrips.fxml&quot;, &quot;My Trips - Voyager+&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private void handleCreateTrip() {&#13;&#10;        navigateToPage(&quot;TripPlanner.fxml&quot;, &quot;Create Trip - Voyager+&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private void handleExpenseCalc() {&#13;&#10;        navigateToPage(&quot;ExpenseCalculator.fxml&quot;, &quot;Expense Calculator - Voyager+&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private void handleNotepad() {&#13;&#10;        navigateToPage(&quot;Notepad.fxml&quot;, &quot;Notepad - Voyager+&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private void handleQuizzes() {&#13;&#10;        navigateToPage(&quot;Quizzes.fxml&quot;, &quot;Quizzes - Voyager+&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    @FXML&#13;&#10;    private void handleGames() {&#13;&#10;        navigateToPage(&quot;MiniGames.fxml&quot;, &quot;Mini Games - Voyager+&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    private void loadNewsFeed() {&#13;&#10;        feedContainer.getChildren().clear();&#13;&#10;        posts.clear();&#13;&#10;        posts.addAll(tripService.getNewsFeed());&#13;&#10;&#13;&#10;        if (posts.isEmpty()) {&#13;&#10;            VBox emptyState = createEmptyState();&#13;&#10;            feedContainer.getChildren().add(emptyState);&#13;&#10;        } else {&#13;&#10;            for (TripPost post : posts) {&#13;&#10;                feedContainer.getChildren().add(createTripCard(post));&#13;&#10;            }&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private VBox createEmptyState() {&#13;&#10;        VBox emptyBox = new VBox(15);&#13;&#10;        emptyBox.setAlignment(Pos.CENTER);&#13;&#10;        emptyBox.setPadding(new Insets(60));&#13;&#10;        emptyBox.getStyleClass().add(&quot;empty-state&quot;);&#13;&#10;&#13;&#10;        Label icon = new Label(&quot;✈️&quot;);&#13;&#10;        icon.setStyle(&quot;-fx-font-size: 64px;&quot;);&#13;&#10;&#13;&#10;        Label title = new Label(&quot;No trips yet!&quot;);&#13;&#10;        title.setStyle(&quot;-fx-font-size: 24px; -fx-font-weight: bold; -fx-text-fill: #2c3e50;&quot;);&#13;&#10;&#13;&#10;        Label subtitle = new Label(&quot;Be the first to share your travel adventure&quot;);&#13;&#10;        subtitle.setStyle(&quot;-fx-font-size: 14px; -fx-text-fill: #7f8c8d;&quot;);&#13;&#10;&#13;&#10;        Button createBtn = new Button(&quot;Create Your First Trip&quot;);&#13;&#10;        createBtn.getStyleClass().add(&quot;create-first-trip-btn&quot;);&#13;&#10;        createBtn.setOnAction(e -&gt; handleCreatePost());&#13;&#10;&#13;&#10;        emptyBox.getChildren().addAll(icon, title, subtitle, createBtn);&#13;&#10;        return emptyBox;&#13;&#10;    }&#13;&#10;&#13;&#10;    private VBox createTripCard(TripPost post) {&#13;&#10;        VBox card = new VBox(12);&#13;&#10;        card.getStyleClass().add(&quot;trip-card&quot;);&#13;&#10;        card.setPadding(new Insets(20));&#13;&#10;&#13;&#10;        // Header: User info and time&#13;&#10;        HBox header = createCardHeader(post);&#13;&#10;&#13;&#10;        // Content&#13;&#10;        Label contentLabel = new Label(post.getContent());&#13;&#10;        contentLabel.setWrapText(true);&#13;&#10;        contentLabel.getStyleClass().add(&quot;post-content&quot;);&#13;&#10;&#13;&#10;        // Trip Details Section&#13;&#10;        VBox tripDetails = createTripDetailsSection(post.getTrip());&#13;&#10;&#13;&#10;        // Activity/Stats Bar&#13;&#10;        HBox statsBar = createStatsBar(post);&#13;&#10;&#13;&#10;        // Action Buttons&#13;&#10;        HBox actions = createActionButtons(post);&#13;&#10;&#13;&#10;        // Add all sections to card&#13;&#10;        card.getChildren().addAll(header, contentLabel, tripDetails, new Separator(), statsBar, actions);&#13;&#10;&#13;&#10;        // Hover effect&#13;&#10;        card.setOnMouseEntered(e -&gt; card.setStyle(&quot;-fx-scale-x: 1.02; -fx-scale-y: 1.02;&quot;));&#13;&#10;        card.setOnMouseExited(e -&gt; card.setStyle(&quot;-fx-scale-x: 1.0; -fx-scale-y: 1.0;&quot;));&#13;&#10;&#13;&#10;        return card;&#13;&#10;    }&#13;&#10;&#13;&#10;    private HBox createCardHeader(TripPost post) {&#13;&#10;        HBox header = new HBox(12);&#13;&#10;        header.setAlignment(Pos.CENTER_LEFT);&#13;&#10;&#13;&#10;        // Avatar&#13;&#10;        Label avatarLabel = new Label(post.getAuthor().getDisplayName().substring(0, 1).toUpperCase());&#13;&#10;        avatarLabel.getStyleClass().add(&quot;avatar-circle&quot;);&#13;&#10;&#13;&#10;        // User info&#13;&#10;        VBox userInfo = new VBox(2);&#13;&#10;        Label nameLabel = new Label(post.getAuthor().getDisplayName());&#13;&#10;        nameLabel.getStyleClass().add(&quot;post-author&quot;);&#13;&#10;&#13;&#10;        Label timeLabel = new Label(post.getTimeAgo() + &quot; • &quot; + post.getTrip().getType());&#13;&#10;        timeLabel.getStyleClass().add(&quot;post-meta&quot;);&#13;&#10;&#13;&#10;        userInfo.getChildren().addAll(nameLabel, timeLabel);&#13;&#10;&#13;&#10;        // Trip type badge&#13;&#10;        Label typeBadge = new Label(post.getTrip().isGroupTrip() ? &quot; Group&quot; : &quot; Solo&quot;);&#13;&#10;        typeBadge.getStyleClass().add(&quot;trip-type-badge&quot;);&#13;&#10;        if (post.getTrip().isGroupTrip()) {&#13;&#10;            typeBadge.getStyleClass().add(&quot;group-badge&quot;);&#13;&#10;        } else {&#13;&#10;            typeBadge.getStyleClass().add(&quot;solo-badge&quot;);&#13;&#10;        }&#13;&#10;&#13;&#10;        Region spacer = new Region();&#13;&#10;        HBox.setHgrow(spacer, Priority.ALWAYS);&#13;&#10;&#13;&#10;        header.getChildren().addAll(avatarLabel, userInfo, spacer, typeBadge);&#13;&#10;        return header;&#13;&#10;    }&#13;&#10;&#13;&#10;    private VBox createTripDetailsSection(Trip trip) {&#13;&#10;        VBox detailsBox = new VBox(10);&#13;&#10;        detailsBox.getStyleClass().add(&quot;trip-details-section&quot;);&#13;&#10;        detailsBox.setPadding(new Insets(15));&#13;&#10;&#13;&#10;        // Trip title&#13;&#10;        Label titleLabel = new Label(trip.getTitle());&#13;&#10;        titleLabel.getStyleClass().add(&quot;trip-detail-title&quot;);&#13;&#10;&#13;&#10;        // Info grid&#13;&#10;        GridPane infoGrid = new GridPane();&#13;&#10;        infoGrid.setHgap(20);&#13;&#10;        infoGrid.setVgap(8);&#13;&#10;&#13;&#10;        // Route&#13;&#10;        Label routeIcon = new Label(&quot;&quot;);&#13;&#10;        Label routeLabel = new Label(trip.getRoute());&#13;&#10;        routeLabel.getStyleClass().add(&quot;trip-detail-info&quot;);&#13;&#10;&#13;&#10;        // Date&#13;&#10;        Label dateIcon = new Label(&quot;&quot;);&#13;&#10;        Label dateLabel = new Label(trip.getDate().format(DateTimeFormatter.ofPattern(&quot;MMM dd, yyyy&quot;)));&#13;&#10;        dateLabel.getStyleClass().add(&quot;trip-detail-info&quot;);&#13;&#10;&#13;&#10;        // Budget&#13;&#10;        Label budgetIcon = new Label(&quot;&quot;);&#13;&#10;        Label budgetLabel = new Label(&quot;$&quot; + String.format(&quot;%.2f&quot;, trip.getBudget()));&#13;&#10;        budgetLabel.getStyleClass().add(&quot;trip-detail-info&quot;);&#13;&#10;&#13;&#10;        // Members (for group trips)&#13;&#10;        if (trip.isGroupTrip()) {&#13;&#10;            Label membersIcon = new Label(&quot;&quot;);&#13;&#10;            Label membersLabel = new Label(trip.getApprovedMembers().size() + &quot; members&quot;);&#13;&#10;            membersLabel.getStyleClass().add(&quot;trip-detail-info&quot;);&#13;&#10;            &#13;&#10;            infoGrid.add(routeIcon, 0, 0);&#13;&#10;            infoGrid.add(routeLabel, 1, 0);&#13;&#10;            infoGrid.add(dateIcon, 0, 1);&#13;&#10;            infoGrid.add(dateLabel, 1, 1);&#13;&#10;            infoGrid.add(budgetIcon, 2, 0);&#13;&#10;            infoGrid.add(budgetLabel, 3, 0);&#13;&#10;            infoGrid.add(membersIcon, 2, 1);&#13;&#10;            infoGrid.add(membersLabel, 3, 1);&#13;&#10;        } else {&#13;&#10;            infoGrid.add(routeIcon, 0, 0);&#13;&#10;            infoGrid.add(routeLabel, 1, 0);&#13;&#10;            infoGrid.add(dateIcon, 0, 1);&#13;&#10;            infoGrid.add(dateLabel, 1, 1);&#13;&#10;            infoGrid.add(budgetIcon, 2, 0);&#13;&#10;            infoGrid.add(budgetLabel, 3, 0);&#13;&#10;        }&#13;&#10;&#13;&#10;        // Description (if exists)&#13;&#10;        if (!trip.getDescription().isEmpty()) {&#13;&#10;            Label descLabel = new Label(trip.getDescription());&#13;&#10;            descLabel.setWrapText(true);&#13;&#10;            descLabel.getStyleClass().add(&quot;trip-description&quot;);&#13;&#10;            descLabel.setMaxWidth(Double.MAX_VALUE);&#13;&#10;            detailsBox.getChildren().addAll(titleLabel, infoGrid, descLabel);&#13;&#10;        } else {&#13;&#10;            detailsBox.getChildren().addAll(titleLabel, infoGrid);&#13;&#10;        }&#13;&#10;&#13;&#10;        return detailsBox;&#13;&#10;    }&#13;&#10;&#13;&#10;    private HBox createStatsBar(TripPost post) {&#13;&#10;        HBox statsBar = new HBox(20);&#13;&#10;        statsBar.setAlignment(Pos.CENTER_LEFT);&#13;&#10;        statsBar.getStyleClass().add(&quot;stats-bar&quot;);&#13;&#10;&#13;&#10;        Label likesLabel = new Label(&quot;❤ &quot; + post.getLikes() + &quot; likes&quot;);&#13;&#10;        likesLabel.getStyleClass().add(&quot;stat-label&quot;);&#13;&#10;&#13;&#10;        Label commentsLabel = new Label(&quot; &quot; + post.getComments() + &quot; comments&quot;);&#13;&#10;        commentsLabel.getStyleClass().add(&quot;stat-label&quot;);&#13;&#10;&#13;&#10;        Label sharesLabel = new Label(&quot; &quot; + post.getShares() + &quot; shares&quot;);&#13;&#10;        sharesLabel.getStyleClass().add(&quot;stat-label&quot;);&#13;&#10;&#13;&#10;        statsBar.getChildren().addAll(likesLabel, commentsLabel, sharesLabel);&#13;&#10;        return statsBar;&#13;&#10;    }&#13;&#10;&#13;&#10;    private HBox createActionButtons(TripPost post) {&#13;&#10;        HBox actions = new HBox(10);&#13;&#10;        actions.setAlignment(Pos.CENTER_LEFT);&#13;&#10;        actions.getStyleClass().add(&quot;action-buttons&quot;);&#13;&#10;&#13;&#10;        // Like button&#13;&#10;        Button likeBtn = new Button(likedPosts.getOrDefault(post.getId(), false) ? &quot;❤ Liked&quot; : &quot; Like&quot;);&#13;&#10;        likeBtn.getStyleClass().add(&quot;action-btn&quot;);&#13;&#10;        likeBtn.setOnAction(e -&gt; handleLikePost(post, likeBtn));&#13;&#10;&#13;&#10;        // Comment button&#13;&#10;        Button commentBtn = new Button(&quot; Comment&quot;);&#13;&#10;        commentBtn.getStyleClass().add(&quot;action-btn&quot;);&#13;&#10;        commentBtn.setOnAction(e -&gt; handleComment(post));&#13;&#10;&#13;&#10;        // View Trip button&#13;&#10;        Button viewBtn = new Button(&quot; View Trip&quot;);&#13;&#10;        viewBtn.getStyleClass().add(&quot;action-btn&quot;);&#13;&#10;        viewBtn.setOnAction(e -&gt; handleViewTrip(post.getTrip()));&#13;&#10;&#13;&#10;        // Join button (only for group trips)&#13;&#10;        if (post.getTrip().isGroupTrip() &amp;&amp; &#13;&#10;            !post.getTrip().getCreatorUsername().equals(tripService.getCurrentUser().getUsername())) {&#13;&#10;            Button joinBtn = new Button(&quot;✈ Request to Join&quot;);&#13;&#10;            joinBtn.getStyleClass().addAll(&quot;action-btn&quot;, &quot;action-btn-primary&quot;);&#13;&#10;            joinBtn.setOnAction(e -&gt; handleJoinTrip(post.getTrip()));&#13;&#10;            actions.getChildren().addAll(likeBtn, commentBtn, viewBtn, joinBtn);&#13;&#10;        } else {&#13;&#10;            actions.getChildren().addAll(likeBtn, commentBtn, viewBtn);&#13;&#10;        }&#13;&#10;&#13;&#10;        return actions;&#13;&#10;    }&#13;&#10;&#13;&#10;    private void handleLikePost(TripPost post, Button likeBtn) {&#13;&#10;        boolean isLiked = likedPosts.getOrDefault(post.getId(), false);&#13;&#10;&#13;&#10;        if (isLiked) {&#13;&#10;            tripService.unlikePost(post.getId());&#13;&#10;            likedPosts.put(post.getId(), false);&#13;&#10;            likeBtn.setText(&quot; Like&quot;);&#13;&#10;        } else {&#13;&#10;            tripService.likePost(post.getId());&#13;&#10;            likedPosts.put(post.getId(), true);&#13;&#10;            likeBtn.setText(&quot;❤ Liked&quot;);&#13;&#10;        }&#13;&#10;&#13;&#10;        // Refresh the feed to update like count&#13;&#10;        loadNewsFeed();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void handleComment(TripPost post) {&#13;&#10;        // TODO: Implement comment functionality&#13;&#10;        showAlert(&quot;Coming Soon&quot;, &quot;Comment feature will be available soon!&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    private void handleViewTrip(Trip trip) {&#13;&#10;        // TODO: Implement trip details view&#13;&#10;        Alert alert = new Alert(Alert.AlertType.INFORMATION);&#13;&#10;        alert.setTitle(&quot;Trip Details&quot;);&#13;&#10;        alert.setHeaderText(trip.getTitle());&#13;&#10;        alert.setContentText(&#13;&#10;            &quot;Route: &quot; + trip.getRoute() + &quot;\n&quot; +&#13;&#10;            &quot;Date: &quot; + trip.getDate() + &quot;\n&quot; +&#13;&#10;            &quot;Budget: $&quot; + String.format(&quot;%.2f&quot;, trip.getBudget()) + &quot;\n&quot; +&#13;&#10;            &quot;Type: &quot; + trip.getType() + &quot;\n&quot; +&#13;&#10;            &quot;Creator: &quot; + trip.getCreatorUsername()&#13;&#10;        );&#13;&#10;        alert.showAndWait();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void handleJoinTrip(Trip trip) {&#13;&#10;        TextInputDialog dialog = new TextInputDialog();&#13;&#10;        dialog.setTitle(&quot;Request to Join&quot;);&#13;&#10;        dialog.setHeaderText(&quot;Request to join: &quot; + trip.getTitle());&#13;&#10;        dialog.setContentText(&quot;Enter your message:&quot;);&#13;&#10;&#13;&#10;        dialog.showAndWait().ifPresent(message -&gt; {&#13;&#10;            JoinRequest request = tripService.requestToJoin(trip.getId(), message);&#13;&#10;            if (request != null) {&#13;&#10;                showAlert(&quot;Request Sent&quot;, &quot;Your join request has been sent to &quot; + trip.getCreatorUsername() + &quot;!&quot;);&#13;&#10;            }&#13;&#10;        });&#13;&#10;    }&#13;&#10;&#13;&#10;    private void navigateToPage(String fxmlFile, String title) {&#13;&#10;        try {&#13;&#10;            FXMLLoader loader = new FXMLLoader(getClass().getResource(fxmlFile));&#13;&#10;            Parent root = loader.load();&#13;&#10;&#13;&#10;            Stage stage = (Stage) feedContainer.getScene().getWindow();&#13;&#10;            stage.setScene(new Scene(root, 1400, 800));&#13;&#10;            stage.setTitle(title);&#13;&#10;&#13;&#10;        } catch (Exception e) {&#13;&#10;            System.err.println(&quot;Failed to load page: &quot; + fxmlFile);&#13;&#10;            showAlert(&quot;Coming Soon&quot;, &quot;This feature is under development!&quot;);&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void showAlert(String title, String message) {&#13;&#10;        Alert alert = new Alert(Alert.AlertType.INFORMATION);&#13;&#10;        alert.setTitle(title);&#13;&#10;        alert.setHeaderText(null);&#13;&#10;        alert.setContentText(message);&#13;&#10;        alert.showAndWait();&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/com/example/voyeger/Home.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/com/example/voyeger/Home.css" />
              <option name="updatedContent" value="/* Home Page / News Feed Styles */&#10;&#10;/* ==================== MAIN LAYOUT ==================== */&#10;.home-container {&#10;    -fx-background-color: #f0f2f5;&#10;}&#10;&#10;.feed-main-section {&#10;    -fx-background-color: transparent;&#10;}&#10;&#10;/* ==================== WELCOME BANNER ==================== */&#10;.welcome-banner {&#10;    -fx-background-color: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.15), 10, 0, 0, 3);&#10;}&#10;&#10;.welcome-title {&#10;    -fx-font-size: 32px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: white;&#10;    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.3), 5, 0, 0, 2);&#10;}&#10;&#10;/* Stats Container */&#10;.stats-container {&#10;    -fx-spacing: 20;&#10;}&#10;&#10;.stat-card {&#10;    -fx-background-color: rgba(255, 255, 255, 0.95);&#10;    -fx-background-radius: 12;&#10;    -fx-padding: 20;&#10;    -fx-spacing: 8;&#10;    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 5, 0, 0, 2);&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.stat-card:hover {&#10;    -fx-background-color: white;&#10;    -fx-scale-x: 1.05;&#10;    -fx-scale-y: 1.05;&#10;}&#10;&#10;.stat-icon {&#10;    -fx-font-size: 36px;&#10;}&#10;&#10;.stat-number {&#10;    -fx-font-size: 28px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #667eea;&#10;}&#10;&#10;.stat-label {&#10;    -fx-font-size: 13px;&#10;    -fx-text-fill: #7f8c8d;&#10;    -fx-font-weight: 600;&#10;}&#10;&#10;/* ==================== CREATE POST SECTION ==================== */&#10;.create-post-section {&#10;    -fx-background-color: white;&#10;    -fx-border-color: #e4e6eb;&#10;    -fx-border-width: 0 0 1 0;&#10;}&#10;&#10;.section-title {&#10;    -fx-font-size: 18px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #2c3e50;&#10;}&#10;&#10;.create-post-textarea {&#10;    -fx-background-color: #f7f8fa;&#10;    -fx-border-color: #e4e6eb;&#10;    -fx-border-radius: 10;&#10;    -fx-background-radius: 10;&#10;    -fx-padding: 12;&#10;    -fx-font-size: 14px;&#10;}&#10;&#10;.create-post-textarea:focused {&#10;    -fx-border-color: #667eea;&#10;    -fx-border-width: 2;&#10;    -fx-background-color: white;&#10;}&#10;&#10;.create-post-btn {&#10;    -fx-background-color: #667eea;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 14px;&#10;    -fx-font-weight: bold;&#10;    -fx-padding: 12 24;&#10;    -fx-background-radius: 8;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.create-post-btn:hover {&#10;    -fx-background-color: #5568d3;&#10;}&#10;&#10;.refresh-btn {&#10;    -fx-background-color: #e4e6eb;&#10;    -fx-text-fill: #2c3e50;&#10;    -fx-font-size: 14px;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 12 20;&#10;    -fx-background-radius: 8;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.refresh-btn:hover {&#10;    -fx-background-color: #d8dadf;&#10;}&#10;&#10;/* ==================== FEED HEADER ==================== */&#10;.feed-header {&#10;    -fx-background-color: white;&#10;    -fx-border-color: #e4e6eb;&#10;    -fx-border-width: 0 0 1 0;&#10;}&#10;&#10;.feed-title {&#10;    -fx-font-size: 22px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #2c3e50;&#10;}&#10;&#10;.trending-badge {&#10;    -fx-background-color: #ff6b6b;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 12px;&#10;    -fx-font-weight: bold;&#10;    -fx-padding: 6 12;&#10;    -fx-background-radius: 15;&#10;}&#10;&#10;/* ==================== FEED SCROLL ==================== */&#10;.feed-scroll {&#10;    -fx-background-color: transparent;&#10;    -fx-background: transparent;&#10;}&#10;&#10;.feed-scroll &gt; .viewport {&#10;    -fx-background-color: transparent;&#10;}&#10;&#10;.feed-container {&#10;    -fx-background-color: transparent;&#10;}&#10;&#10;/* ==================== EMPTY STATE ==================== */&#10;.empty-state {&#10;    -fx-background-color: white;&#10;    -fx-background-radius: 12;&#10;    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.08), 5, 0, 0, 2);&#10;}&#10;&#10;.create-first-trip-btn {&#10;    -fx-background-color: #667eea;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 16px;&#10;    -fx-font-weight: bold;&#10;    -fx-padding: 15 30;&#10;    -fx-background-radius: 25;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.create-first-trip-btn:hover {&#10;    -fx-background-color: #5568d3;&#10;    -fx-scale-x: 1.05;&#10;    -fx-scale-y: 1.05;&#10;}&#10;&#10;/* ==================== TRIP CARDS ==================== */&#10;.trip-card {&#10;    -fx-background-color: white;&#10;    -fx-background-radius: 12;&#10;    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 8, 0, 0, 2);&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.trip-card:hover {&#10;    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.2), 12, 0, 0, 4);&#10;}&#10;&#10;/* Card Header */&#10;.avatar-circle {&#10;    -fx-min-width: 48px;&#10;    -fx-min-height: 48px;&#10;    -fx-max-width: 48px;&#10;    -fx-max-height: 48px;&#10;    -fx-background-color: linear-gradient(135deg, #667eea, #764ba2);&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 20px;&#10;    -fx-font-weight: bold;&#10;    -fx-alignment: center;&#10;    -fx-background-radius: 50%;&#10;}&#10;&#10;.post-author {&#10;    -fx-font-size: 16px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #2c3e50;&#10;}&#10;&#10;.post-meta {&#10;    -fx-font-size: 13px;&#10;    -fx-text-fill: #7f8c8d;&#10;}&#10;&#10;.trip-type-badge {&#10;    -fx-font-size: 12px;&#10;    -fx-font-weight: bold;&#10;    -fx-padding: 6 12;&#10;    -fx-background-radius: 12;&#10;}&#10;&#10;.group-badge {&#10;    -fx-background-color: #e7f3ff;&#10;    -fx-text-fill: #1877f2;&#10;}&#10;&#10;.solo-badge {&#10;    -fx-background-color: #fff3e0;&#10;    -fx-text-fill: #f57c00;&#10;}&#10;&#10;/* Post Content */&#10;.post-content {&#10;    -fx-font-size: 15px;&#10;    -fx-text-fill: #2c3e50;&#10;    -fx-line-spacing: 1.5;&#10;}&#10;&#10;/* Trip Details Section */&#10;.trip-details-section {&#10;    -fx-background-color: #f8f9fa;&#10;    -fx-background-radius: 10;&#10;    -fx-border-color: #e4e6eb;&#10;    -fx-border-width: 1;&#10;    -fx-border-radius: 10;&#10;}&#10;&#10;.trip-detail-title {&#10;    -fx-font-size: 20px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #2c3e50;&#10;}&#10;&#10;.trip-detail-info {&#10;    -fx-font-size: 14px;&#10;    -fx-text-fill: #495057;&#10;    -fx-font-weight: 500;&#10;}&#10;&#10;.trip-description {&#10;    -fx-font-size: 14px;&#10;    -fx-text-fill: #6c757d;&#10;    -fx-line-spacing: 1.4;&#10;}&#10;&#10;/* Stats Bar */&#10;.stats-bar {&#10;    -fx-padding: 8 0;&#10;}&#10;&#10;.stat-label {&#10;    -fx-font-size: 13px;&#10;    -fx-text-fill: #7f8c8d;&#10;    -fx-font-weight: 600;&#10;}&#10;&#10;/* Action Buttons */&#10;.action-buttons {&#10;    -fx-padding: 8 0 0 0;&#10;}&#10;&#10;.action-btn {&#10;    -fx-background-color: transparent;&#10;    -fx-text-fill: #495057;&#10;    -fx-font-size: 14px;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 10 16;&#10;    -fx-background-radius: 8;&#10;    -fx-border-color: #e4e6eb;&#10;    -fx-border-width: 1;&#10;    -fx-border-radius: 8;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.action-btn:hover {&#10;    -fx-background-color: #f8f9fa;&#10;    -fx-border-color: #667eea;&#10;}&#10;&#10;.action-btn-primary {&#10;    -fx-background-color: #667eea;&#10;    -fx-text-fill: white;&#10;    -fx-border-color: #667eea;&#10;}&#10;&#10;.action-btn-primary:hover {&#10;    -fx-background-color: #5568d3;&#10;    -fx-border-color: #5568d3;&#10;}&#10;&#10;/* ==================== SIDEBAR ==================== */&#10;.sidebar-section {&#10;    -fx-background-color: #f8f9fa;&#10;    -fx-border-color: #e4e6eb;&#10;    -fx-border-width: 0 0 0 1;&#10;}&#10;&#10;.sidebar-card {&#10;    -fx-background-color: white;&#10;    -fx-background-radius: 12;&#10;    -fx-padding: 20;&#10;    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.08), 5, 0, 0, 2);&#10;}&#10;&#10;.sidebar-title {&#10;    -fx-font-size: 16px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #2c3e50;&#10;}&#10;&#10;/* Quick Links */&#10;.quick-link-btn {&#10;    -fx-background-color: #f8f9fa;&#10;    -fx-text-fill: #495057;&#10;    -fx-font-size: 14px;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 12 16;&#10;    -fx-background-radius: 8;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.quick-link-btn:hover {&#10;    -fx-background-color: #e9ecef;&#10;    -fx-text-fill: #667eea;&#10;}&#10;&#10;/* Notifications */&#10;.notification-list {&#10;    -fx-spacing: 8;&#10;}&#10;&#10;.notification-item {&#10;    -fx-background-color: #f8f9fa;&#10;    -fx-background-radius: 8;&#10;    -fx-padding: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.notification-item:hover {&#10;    -fx-background-color: #e9ecef;&#10;}&#10;&#10;.notif-icon {&#10;    -fx-font-size: 24px;&#10;}&#10;&#10;.notif-title {&#10;    -fx-font-size: 13px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #2c3e50;&#10;}&#10;&#10;.notif-subtitle {&#10;    -fx-font-size: 12px;&#10;    -fx-text-fill: #7f8c8d;&#10;}&#10;&#10;/* Trending Destinations */&#10;.trending-destination {&#10;    -fx-font-size: 14px;&#10;    -fx-text-fill: #495057;&#10;    -fx-padding: 10;&#10;    -fx-background-color: #f8f9fa;&#10;    -fx-background-radius: 8;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.trending-destination:hover {&#10;    -fx-background-color: #e9ecef;&#10;    -fx-text-fill: #667eea;&#10;}&#10;&#10;/* ==================== SEPARATOR ==================== */&#10;.separator {&#10;    -fx-background-color: #e4e6eb;&#10;}&#10;&#10;/* ==================== RESPONSIVE ADJUSTMENTS ==================== */&#10;@media (max-width: 1024px) {&#10;    .sidebar-section {&#10;        -fx-pref-width: 280;&#10;    }&#10;}&#10;&#10;/* ==================== ANIMATIONS ==================== */&#10;.trip-card {&#10;    -fx-transition: all 0.3s ease;&#10;}&#10;&#10;.stat-card {&#10;    -fx-transition: all 0.3s ease;&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/com/example/voyeger/NewsFeed.fxml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/com/example/voyeger/NewsFeed.fxml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&#10;&lt;?import javafx.scene.control.*?&gt;&#10;&lt;?import javafx.scene.layout.*?&gt;&#10;&lt;?import javafx.geometry.Insets?&gt;&#10;&#10;&lt;BorderPane xmlns:fx=&quot;http://javafx.com/fxml&quot;&#10;            fx:controller=&quot;com.example.voyeger.NewsFeedController&quot;&#10;            stylesheets=&quot;@Main.css,@Home.css&quot;&gt;&#10;&#10;    &lt;!-- Main Content Area --&gt;&#10;    &lt;center&gt;&#10;        &lt;HBox spacing=&quot;0&quot; styleClass=&quot;home-container&quot;&gt;&#10;&#10;            &lt;!-- Left Content: Main Feed --&gt;&#10;            &lt;VBox spacing=&quot;0&quot; HBox.hgrow=&quot;ALWAYS&quot; styleClass=&quot;feed-main-section&quot;&gt;&#10;                &#10;                &lt;!-- Welcome Banner --&gt;&#10;                &lt;VBox styleClass=&quot;welcome-banner&quot;&gt;&#10;                    &lt;padding&gt;&#10;                        &lt;Insets top=&quot;30&quot; right=&quot;30&quot; bottom=&quot;30&quot; left=&quot;30&quot;/&gt;&#10;                    &lt;/padding&gt;&#10;&#10;                    &lt;Label fx:id=&quot;welcomeLabel&quot; text=&quot;Welcome, User! &quot; styleClass=&quot;welcome-title&quot;/&gt;&#10;                    &#10;                    &lt;!-- Stats Cards --&gt;&#10;                    &lt;HBox spacing=&quot;20&quot; styleClass=&quot;stats-container&quot;&gt;&#10;                        &lt;VBox.margin&gt;&#10;                            &lt;Insets top=&quot;20&quot;/&gt;&#10;                        &lt;/VBox.margin&gt;&#10;&#10;                        &lt;!-- Total Trips --&gt;&#10;                        &lt;VBox styleClass=&quot;stat-card&quot; alignment=&quot;CENTER&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                            &lt;Label text=&quot;&quot; styleClass=&quot;stat-icon&quot;/&gt;&#10;                            &lt;Label fx:id=&quot;tripCountLabel&quot; text=&quot;0&quot; styleClass=&quot;stat-number&quot;/&gt;&#10;                            &lt;Label text=&quot;Total Trips&quot; styleClass=&quot;stat-label&quot;/&gt;&#10;                        &lt;/VBox&gt;&#10;&#10;                        &lt;!-- Reward Points --&gt;&#10;                        &lt;VBox styleClass=&quot;stat-card&quot; alignment=&quot;CENTER&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                            &lt;Label text=&quot;&quot; styleClass=&quot;stat-icon&quot;/&gt;&#10;                            &lt;Label fx:id=&quot;rewardPointsLabel&quot; text=&quot;0&quot; styleClass=&quot;stat-number&quot;/&gt;&#10;                            &lt;Label text=&quot;Reward Points&quot; styleClass=&quot;stat-label&quot;/&gt;&#10;                        &lt;/VBox&gt;&#10;&#10;                        &lt;!-- Upcoming Trips --&gt;&#10;                        &lt;VBox styleClass=&quot;stat-card&quot; alignment=&quot;CENTER&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                            &lt;Label text=&quot;&quot; styleClass=&quot;stat-icon&quot;/&gt;&#10;                            &lt;Label fx:id=&quot;upcomingTripsLabel&quot; text=&quot;0&quot; styleClass=&quot;stat-number&quot;/&gt;&#10;                            &lt;Label text=&quot;Upcoming Trips&quot; styleClass=&quot;stat-label&quot;/&gt;&#10;                        &lt;/VBox&gt;&#10;&#10;                    &lt;/HBox&gt;&#10;                &lt;/VBox&gt;&#10;&#10;                &lt;!-- Create Post Section --&gt;&#10;                &lt;VBox styleClass=&quot;create-post-section&quot;&gt;&#10;                    &lt;padding&gt;&#10;                        &lt;Insets top=&quot;20&quot; right=&quot;30&quot; bottom=&quot;20&quot; left=&quot;30&quot;/&gt;&#10;                    &lt;/padding&gt;&#10;&#10;                    &lt;Label text=&quot;Share Your Adventure ✈️&quot; styleClass=&quot;section-title&quot;/&gt;&#10;                    &#10;                    &lt;TextArea fx:id=&quot;createPostArea&quot; &#10;                              promptText=&quot;What's your next destination? Share your travel plans...&quot; &#10;                              wrapText=&quot;true&quot; &#10;                              prefRowCount=&quot;3&quot; &#10;                              styleClass=&quot;create-post-textarea&quot;&gt;&#10;                        &lt;VBox.margin&gt;&#10;                            &lt;Insets top=&quot;10&quot; bottom=&quot;10&quot;/&gt;&#10;                        &lt;/VBox.margin&gt;&#10;                    &lt;/TextArea&gt;&#10;&#10;                    &lt;HBox spacing=&quot;10&quot; alignment=&quot;CENTER_LEFT&quot;&gt;&#10;                        &lt;Button text=&quot;✈ Create Trip Post&quot; onAction=&quot;#handleCreatePost&quot; styleClass=&quot;create-post-btn&quot;/&gt;&#10;                        &lt;Button text=&quot; Refresh Feed&quot; onAction=&quot;#handleRefreshFeed&quot; styleClass=&quot;refresh-btn&quot;/&gt;&#10;                    &lt;/HBox&gt;&#10;                &lt;/VBox&gt;&#10;&#10;                &lt;!-- Feed Title --&gt;&#10;                &lt;HBox styleClass=&quot;feed-header&quot; alignment=&quot;CENTER_LEFT&quot;&gt;&#10;                    &lt;padding&gt;&#10;                        &lt;Insets top=&quot;20&quot; right=&quot;30&quot; bottom=&quot;10&quot; left=&quot;30&quot;/&gt;&#10;                    &lt;/padding&gt;&#10;                    &lt;Label text=&quot;Latest Adventures&quot; styleClass=&quot;feed-title&quot;/&gt;&#10;                    &lt;Region HBox.hgrow=&quot;ALWAYS&quot;/&gt;&#10;                    &lt;Label text=&quot; Trending Now&quot; styleClass=&quot;trending-badge&quot;/&gt;&#10;                &lt;/HBox&gt;&#10;&#10;                &lt;!-- Trip Feed (ScrollPane) --&gt;&#10;                &lt;ScrollPane fx:id=&quot;feedScrollPane&quot; fitToWidth=&quot;true&quot; styleClass=&quot;feed-scroll&quot; VBox.vgrow=&quot;ALWAYS&quot;&gt;&#10;                    &lt;VBox fx:id=&quot;feedContainer&quot; spacing=&quot;15&quot; styleClass=&quot;feed-container&quot;&gt;&#10;                        &lt;padding&gt;&#10;                            &lt;Insets top=&quot;10&quot; right=&quot;30&quot; bottom=&quot;30&quot; left=&quot;30&quot;/&gt;&#10;                        &lt;/padding&gt;&#10;                        &lt;!-- Trip cards will be dynamically loaded here --&gt;&#10;                    &lt;/VBox&gt;&#10;                &lt;/ScrollPane&gt;&#10;&#10;            &lt;/VBox&gt;&#10;&#10;            &lt;!-- Right Sidebar --&gt;&#10;            &lt;VBox styleClass=&quot;sidebar-section&quot; prefWidth=&quot;320&quot; spacing=&quot;20&quot;&gt;&#10;                &lt;padding&gt;&#10;                    &lt;Insets top=&quot;30&quot; right=&quot;20&quot; bottom=&quot;30&quot; left=&quot;20&quot;/&gt;&#10;                &lt;/padding&gt;&#10;&#10;                &lt;!-- Quick Links --&gt;&#10;                &lt;VBox fx:id=&quot;quickLinksContainer&quot; spacing=&quot;12&quot; styleClass=&quot;sidebar-card&quot;&gt;&#10;                    &lt;Label text=&quot;⚡ Quick Links&quot; styleClass=&quot;sidebar-title&quot;/&gt;&#10;                    &lt;Separator/&gt;&#10;&#10;                    &lt;Button text=&quot; My Trips&quot; onAction=&quot;#handleMyTrips&quot; styleClass=&quot;quick-link-btn&quot; maxWidth=&quot;Infinity&quot;/&gt;&#10;                    &lt;Button text=&quot;✈ Create Trip&quot; onAction=&quot;#handleCreateTrip&quot; styleClass=&quot;quick-link-btn&quot; maxWidth=&quot;Infinity&quot;/&gt;&#10;                    &lt;Button text=&quot; Expense Calculator&quot; onAction=&quot;#handleExpenseCalc&quot; styleClass=&quot;quick-link-btn&quot; maxWidth=&quot;Infinity&quot;/&gt;&#10;                    &lt;Button text=&quot; Notepad&quot; onAction=&quot;#handleNotepad&quot; styleClass=&quot;quick-link-btn&quot; maxWidth=&quot;Infinity&quot;/&gt;&#10;                    &lt;Button text=&quot; Quizzes&quot; onAction=&quot;#handleQuizzes&quot; styleClass=&quot;quick-link-btn&quot; maxWidth=&quot;Infinity&quot;/&gt;&#10;                    &lt;Button text=&quot; Mini Games&quot; onAction=&quot;#handleGames&quot; styleClass=&quot;quick-link-btn&quot; maxWidth=&quot;Infinity&quot;/&gt;&#10;                &lt;/VBox&gt;&#10;&#10;                &lt;!-- Notifications --&gt;&#10;                &lt;VBox fx:id=&quot;notificationsContainer&quot; spacing=&quot;12&quot; styleClass=&quot;sidebar-card&quot;&gt;&#10;                    &lt;Label text=&quot; Notifications&quot; styleClass=&quot;sidebar-title&quot;/&gt;&#10;                    &lt;Separator/&gt;&#10;&#10;                    &lt;VBox spacing=&quot;8&quot; styleClass=&quot;notification-list&quot;&gt;&#10;                        &lt;HBox spacing=&quot;10&quot; styleClass=&quot;notification-item&quot;&gt;&#10;                            &lt;Label text=&quot;&quot; styleClass=&quot;notif-icon&quot;/&gt;&#10;                            &lt;VBox spacing=&quot;2&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                                &lt;Label text=&quot;2 Join Requests&quot; styleClass=&quot;notif-title&quot;/&gt;&#10;                                &lt;Label text=&quot;Pending approval&quot; styleClass=&quot;notif-subtitle&quot;/&gt;&#10;                            &lt;/VBox&gt;&#10;                        &lt;/HBox&gt;&#10;&#10;                        &lt;HBox spacing=&quot;10&quot; styleClass=&quot;notification-item&quot;&gt;&#10;                            &lt;Label text=&quot;&quot; styleClass=&quot;notif-icon&quot;/&gt;&#10;                            &lt;VBox spacing=&quot;2&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                                &lt;Label text=&quot;New Messages&quot; styleClass=&quot;notif-title&quot;/&gt;&#10;                                &lt;Label text=&quot;3 unread chats&quot; styleClass=&quot;notif-subtitle&quot;/&gt;&#10;                            &lt;/VBox&gt;&#10;                        &lt;/HBox&gt;&#10;&#10;                        &lt;HBox spacing=&quot;10&quot; styleClass=&quot;notification-item&quot;&gt;&#10;                            &lt;Label text=&quot;&quot; styleClass=&quot;notif-icon&quot;/&gt;&#10;                            &lt;VBox spacing=&quot;2&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                                &lt;Label text=&quot;Points Earned!&quot; styleClass=&quot;notif-title&quot;/&gt;&#10;                                &lt;Label text=&quot;Complete quizzes to earn more&quot; styleClass=&quot;notif-subtitle&quot;/&gt;&#10;                            &lt;/VBox&gt;&#10;                        &lt;/HBox&gt;&#10;                    &lt;/VBox&gt;&#10;                &lt;/VBox&gt;&#10;&#10;                &lt;!-- Trending Destinations --&gt;&#10;                &lt;VBox spacing=&quot;12&quot; styleClass=&quot;sidebar-card&quot;&gt;&#10;                    &lt;Label text=&quot; Trending Destinations&quot; styleClass=&quot;sidebar-title&quot;/&gt;&#10;                    &lt;Separator/&gt;&#10;&#10;                    &lt;VBox spacing=&quot;8&quot;&gt;&#10;                        &lt;Label text=&quot; Paris, France&quot; styleClass=&quot;trending-destination&quot;/&gt;&#10;                        &lt;Label text=&quot; Bali, Indonesia&quot; styleClass=&quot;trending-destination&quot;/&gt;&#10;                        &lt;Label text=&quot; Tokyo, Japan&quot; styleClass=&quot;trending-destination&quot;/&gt;&#10;                        &lt;Label text=&quot; Swiss Alps&quot; styleClass=&quot;trending-destination&quot;/&gt;&#10;                        &lt;Label text=&quot; Maldives&quot; styleClass=&quot;trending-destination&quot;/&gt;&#10;                    &lt;/VBox&gt;&#10;                &lt;/VBox&gt;&#10;&#10;            &lt;/VBox&gt;&#10;&#10;        &lt;/HBox&gt;&#10;    &lt;/center&gt;&#10;&#10;&lt;/BorderPane&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>